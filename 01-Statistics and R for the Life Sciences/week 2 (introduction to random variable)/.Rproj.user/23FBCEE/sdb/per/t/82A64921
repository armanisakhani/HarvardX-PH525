{
    "contents" : "setwd(\"01-Statistics and R for the Life Sciences/week 2 (introduction to random variable)\")\nrm(list = ls())\ndat <- read.csv(\"femaleMiceWeights.csv\")\n\nmean(dat[13:24,2]) - mean(dat[1:12,2])\n\n\n\n# Let's start by loading in the data that Rafa used in the video. Remember to click on \"Raw\" to download individual files from github.\n# \n# dat = read.csv(\"femaleMiceWeights.csv\")\n# \n# The observed difference between high fat diet and control was calculated like so:\n# \n# mean(dat[13:24,2]) - mean(dat[1:12,2])\n# \n# Let's make a plot of these two groups: a strip chart of the weights. We're going to use some of the functions that we used from the assessments in Week 1, split() and soon sapply().\n\ns = split(dat[,2], dat[,1])\nstripchart(s, vertical=TRUE, col=1:2)\n\n# Let's add the means to the plot as well:\n  \n  abline(h=sapply(s, mean), col=1:2)\n\n\nsum(s[[2]]< mean(s[[1]]))\nsum(s[[1]]> mean(s[[2]]))\n\nhighfat = s[[\"hf\"]]\nsum(highfat>30)/length(highfat)\n\npopulation <- read.csv(\"femaleControlsPopulation.csv\")\nView(population)\npopulation = population[,1]\nmean(population)\n\ndat <- as.data.table(dat)\ndat\nsum(dat[,Diet] == c(\"hf\") & dat[,Bodyweight] > 30)/sum(dat[,Diet] == c(\"hf\"))\n\n\n\n\n\n# In the previous assessments, we created a vector of differences between means of random samples from the control population. This gives us a sense of the null distribution of differences if there is no true effect of a high fat diet. Let's recreate that vector:\n# \nnull = replicate(10000, mean(sample(population, 12)) - mean(sample(population, 12)))\n# \n# The simple visualization of stacking the values which are close, in order to see the spread, is incredibly useful. Instead of actually writing the values on the plot, a more common visualization (which we will see again in Week 4), is a histogram. The histogram also puts the values into bins along the x-axis, but instead of writing the value, we just draw a vertical bar with the height equal to the number of values that fell in that bin:\n\nhist(null)\n\n# Let's return to the original difference we observed between the mice fed high fat diets and control mice:\n  \n  diff = mean(dat[13:24,2]) - mean(dat[1:12,2])\n\n# Now what do we see when we add this difference to the histogram:\n  \n  abline(v=diff, col=\"red\")\n\n# If we look for the number of null distribution values to the right of the red line, we would say \"we calculated the probability of observing a larger difference from the null distribution\". This is sometimes called a \"one-tailed\" probability, because we only look at one \"tail\" of the histogram (the left and right sides where the bars become short). \n# \n# We can also add the negative of the difference:\n  \n  abline(v=-diff, col=\"red\")\n\n# By looking at the tails on both sides of the histogram, we can say \"we calculated the probability of observing as extreme a difference from the null distribution\". This is sometimes called a \"two-tailed\" probability. And as Rafa said in the video, this probability is commonly referred to as a p-value.\n\n(sum(null>diff)+ sum(null<(-diff)))/length(null)\n\n\n\n\n\n# In the video you just watched, Rafa looked at distributions of heights, and asked what was the probability of someone being shorter than a given height. In this assessment, we are going to ask the same question, but instead of people and heights, we are going to look at whole countries and the average life expectancy in those countries.\n# \n# We will use the data set called \"Gapminder\" which is available as an R-package on Github. This data set contains the life expectancy, GDP per capita, and population by country, every five years, from 1952 to 2007. It is an excerpt of a larger and more comprehensive set of data available on Gapminder.org, and the R package of this dataset was created by the statistics professor Jennifer Bryan.\n# \n# First, install the gapminder data set using the devtools R-package.\n\nlibrary(devtools)\ninstall_github(\"jennybc/gapminder\")\n\n# Next, load the gapminder data set. To find out more information about the data set, use ?gapminder which will bring up a help file. To return the first few lines of the data set, use the function head().\n\nlibrary(gapminder)\ndata(gapminder)\nhead(gapminder)\n\n# Create a vector 'x' of the life expectancies of each country for the year 1952. Plot a histogram of these life expectancies to see the spread of the different countries.\ngapminder\n\ndata[]\n\n\n\n## My works\ndat <- read.csv(file = \"femaleControlsPopulation.csv\")\nmean(dat$Bodyweight)\nset.seed(5)\nsamples <- sample(x = 1:nrow(dat), size = 5, replace = F)\nabs(mean(dat$Bodyweight)- mean(dat$Bodyweight[samples]))\n\n\nset.seed(1)\nmeans <- rep(0, 1000)\nfor(i in 1:1000){\n      idx_sample <- sample(1:nrow(dat),size = 50,replace = F)\n      means[i] <- mean(dat$Bodyweight[idx_sample])\n      \n}\nsum(abs(means - mean(dat$Bodyweight)) >= 1)\n",
    "created" : 1447972066669.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1255775230",
    "id" : "82A64921",
    "lastKnownWriteTime" : 1447188670,
    "path" : "D:/OneDrive/R/My Courses/Online_Courses/HarvardX-PH525/01-Statistics and R for the Life Sciences/week 2 (introduction to random variable)/week 2.1.R",
    "project_path" : "week 2.1.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}